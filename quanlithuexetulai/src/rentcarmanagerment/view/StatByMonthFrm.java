package rentcarmanagerment.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rentcarmanagerment.dao.StatByMonthDAO;
import rentcarmanagerment.model.IncomeStatByMonth;

/**
 *
 * @author Tran Phuc
 */
public class StatByMonthFrm extends JFrame {

    private final MyCustomTable model;

    private List<IncomeStatByMonth> is;

    private static final String[] COL_NAME = {"#", "Month", "Transactions", "Revenue from Contract", "Cost Incurred", "Actual Revenue"};

    private static boolean invalid = true;

    public StatByMonthFrm() {
        super("Revenue statistics by month");
        is = new ArrayList<>();

        initComponents();
        lbMessage.setVisible(false);
        model = (MyCustomTable) tableStat.getModel();
    }

    private void fillTable(String year, int sm, int em) throws SQLException {
        model.setRowCount(0);

        StatByMonthDAO dao = new StatByMonthDAO();

        is = dao.getIncomeStat(year, sm, em);
        if (is.isEmpty()) {
            throw new NullPointerException();
        }
        model.setColumnIdentifiers(COL_NAME);

        String allMonths = "";
        int allTransactions = 0;
        double allRevenueContracts = 0;
        double allCostIncurred = 0;
        double allActualRevenue = 0;

        for (IncomeStatByMonth i : is) {
            if (!i.getTime().equals(is.get(is.size()-1).getTime())) {
                allMonths += i.getTime() + ", ";
            } else {
                allMonths += i.getTime();
            }
            allTransactions += i.getNumOfTransactions();
            allRevenueContracts += i.getRevenueFromContract();
            allCostIncurred += i.getSumCostIncurred();
            allActualRevenue += i.getActualRevenue();
        }

        model.addRow(new Object[]{
            "All", allMonths, allTransactions, allRevenueContracts, allCostIncurred, allActualRevenue
        });

        int count = 1;
        for (IncomeStatByMonth s : is) {
            model.addRow(new Object[]{
                count++,
                s.getTime(),
                s.getNumOfTransactions(),
                s.getRevenueFromContract(),
                s.getSumCostIncurred(),
                s.getActualRevenue()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameDetails = new StatByMonthDetailsFrm();
        btnView = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        cbxStartMonth = new javax.swing.JComboBox();
        lbYear = new javax.swing.JLabel();
        cbxEndMonth = new javax.swing.JComboBox();
        lbFrom = new javax.swing.JLabel();
        lbTo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        lbMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        tableStat = new javax.swing.JTable();
        lbNote = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mHome = new javax.swing.JMenu();
        mType = new javax.swing.JMenu();
        itemByTime = new javax.swing.JMenuItem();
        itemByCar = new javax.swing.JMenuItem();

        javax.swing.GroupLayout frameDetailsLayout = new javax.swing.GroupLayout(frameDetails.getContentPane());
        frameDetails.getContentPane().setLayout(frameDetailsLayout);
        frameDetailsLayout.setHorizontalGroup(
            frameDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        frameDetailsLayout.setVerticalGroup(
            frameDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cbxStartMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbxStartMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxStartMonthActionPerformed(evt);
            }
        });

        lbYear.setText("Year:");

        cbxEndMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbxEndMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEndMonthActionPerformed(evt);
            }
        });

        lbFrom.setText("From:");

        lbTo.setText("To:");

        jLabel3.setText("Choose month range to view:");

        txtYear.setText("2019");

        lbMessage.setForeground(new java.awt.Color(255, 51, 51));
        lbMessage.setText("invalid message");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tableStat.setModel(new MyCustomTable());
        tableStat.getTableHeader().setReorderingAllowed(false);
        scrollPane.setViewportView(tableStat);

        lbNote.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        lbNote.setText("(*) Only months with revenue are counted.");
        lbNote.setToolTipText("");

        mHome.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\ptit-cnpm\\quanlithuexetulai\\image\\home-icon.png")); // NOI18N
        mHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mHomeMouseClicked(evt);
            }
        });
        jMenuBar1.add(mHome);

        mType.setText("Type");
        mType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mTypeMouseEntered(evt);
            }
        });

        itemByTime.setText("By Time");
        itemByTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemByTimeActionPerformed(evt);
            }
        });
        mType.add(itemByTime);

        itemByCar.setText("By Car");
        itemByCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemByCarActionPerformed(evt);
            }
        });
        mType.add(itemByCar);

        jMenuBar1.add(mType);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lbMessage)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbFrom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbTo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbYear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                                .addComponent(btnView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbNote)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFrom)
                    .addComponent(lbYear)
                    .addComponent(btnBack)
                    .addComponent(cbxEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTo)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbMessage)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNote)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mHomeMouseClicked
        this.setVisible(false);
        new ManagerHomeFrm(LoginFrm.name).setVisible(true);
    }//GEN-LAST:event_mHomeMouseClicked

    private void itemByTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemByTimeActionPerformed
        System.out.println("Already Showed");
    }//GEN-LAST:event_itemByTimeActionPerformed

    private void itemByCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemByCarActionPerformed
        this.setVisible(false);
        new StatByCarFrm().setVisible(true);
    }//GEN-LAST:event_itemByCarActionPerformed

    private void mTypeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mTypeMouseEntered
        mType.doClick();
    }//GEN-LAST:event_mTypeMouseEntered

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        if (!invalid) {
            lbMessage.setVisible(false);
            try {
                fillTable(txtYear.getText(), cbxStartMonth.getSelectedIndex() + 1, cbxEndMonth.getSelectedIndex() + 1);
                tableStat.addMouseListener(new java.awt.event.MouseAdapter() {

                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent e) {
                        if (e.getClickCount() == 2 && tableStat.rowAtPoint(e.getPoint()) != 0) {
                            int row = tableStat.rowAtPoint(e.getPoint());

                            int monthSelected = Integer.parseInt(tableStat.getValueAt(row, 1).toString());
                            int transactions = Integer.parseInt(tableStat.getValueAt(row, 2).toString());
                            double revenueContract = Double.parseDouble(tableStat.getValueAt(row, 3).toString());
                            double costIncurred = Double.parseDouble(tableStat.getValueAt(row, 4).toString());
                            double actualRevenue = Double.parseDouble(tableStat.getValueAt(row, 5).toString());

                            showDetails(monthSelected, transactions, revenueContract, costIncurred, actualRevenue);
                        }
                    }
                });
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Something wrong in your SQL");
            } catch (NullPointerException ex) {
                lbMessage.setText("These months have no revenue!");
                lbMessage.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void showDetails(int month, int transactions, double revenueContract, double costIncurred, double actualRevenue) {
        try {
            frameDetails = new StatByMonthDetailsFrm(txtYear.getText(), month, transactions, revenueContract, costIncurred, actualRevenue);
            frameDetails.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frameDetails.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Thống kê chi tiết thất bại");
        }
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        new StatisticHomeFrm().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbxStartMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxStartMonthActionPerformed
        if (Integer.parseInt(cbxStartMonth.getSelectedItem().toString()) > Integer.parseInt(cbxEndMonth.getSelectedItem().toString())) {
            lbMessage.setText("The end month must be greater than the start month.");
            lbMessage.setVisible(true);
            invalid = true;
        } else {
            lbMessage.setVisible(false);
            invalid = false;
        }
    }//GEN-LAST:event_cbxStartMonthActionPerformed

    private void cbxEndMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEndMonthActionPerformed
        if (Integer.parseInt(cbxStartMonth.getSelectedItem().toString()) > Integer.parseInt(cbxEndMonth.getSelectedItem().toString())) {
            lbMessage.setText("The end month must be greater than the start month.");
            lbMessage.setVisible(true);
            invalid = true;
        } else {
            lbMessage.setVisible(false);
            invalid = false;
        }
    }//GEN-LAST:event_cbxEndMonthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cbxEndMonth;
    private javax.swing.JComboBox cbxStartMonth;
    private javax.swing.JFrame frameDetails;
    private javax.swing.JMenuItem itemByCar;
    private javax.swing.JMenuItem itemByTime;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbFrom;
    private javax.swing.JLabel lbMessage;
    private javax.swing.JLabel lbNote;
    private javax.swing.JLabel lbTo;
    private javax.swing.JLabel lbYear;
    private javax.swing.JMenu mHome;
    private javax.swing.JMenu mType;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tableStat;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    class MyCustomTable extends DefaultTableModel {

        public MyCustomTable() {
            super();
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }

    }
}
